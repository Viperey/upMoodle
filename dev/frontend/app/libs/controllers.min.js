angular.module("upmApp").controller("confirmEmailCtrl",["$scope","$cookies","api","snackbar","$routeParams","$location","$timeout",function($scope,$cookies,api,snackbar,$routeParams,$location){console.log("confirmEmailCtrl"),console.log($routeParams.token),$scope.confirmed=!1,api.confirmEmail($routeParams.token).success(function(data){snackbar.message(data.message,3e3),$location.path("/login")}).error(function(data){snackbar.error(data,3e3),$location.path("/login")})}]),angular.module("upmApp").controller("dashboardCtrl",["$scope","$cookies","api","User","userModel",function(){}]),angular.module("upmApp").controller("editSubjectsCtrl",["$scope","$cookies","api","User","userModel","snackbar",function($scope,$cookies,api,User,userModel,snackbar){api.subjectsTree().success(function(data){$scope.careers=data}).error(function(){}),$scope.isAUserSubject=function(subject){return subject.signedUp=User.isSignedInSubject(subject.id),User.isSignedInSubject(subject.id)},$scope.updateUserSubjects=function(){var subjectsCheck=[];angular.forEach($scope.careers,function(career){angular.forEach(career.children,function(course){angular.forEach(course.children,function(subject){subject.signedUp&&subjectsCheck.push(subject.id)})})}),api.updateUserSubjects(subjectsCheck).success(function(data){snackbar.message(data.message),api.getUser().success(function(data){snackbar.message(data),User.set(data)})}).error(function(data){snackbar.error(data.error)})}}]),angular.module("upmApp").controller("loginController",["$scope","$cookies","api","User","$location","snackbar",function($scope,$cookies,api,User,$location,snackbar){$scope.sendForm=function(user){var email=user&&user.email?user.email:null,password=user&&user.password?user.password:null;api.login(email,password).success(function(data){snackbar.message(data.message),$scope.getUser()}).error(function(data){snackbar.error(data.error)})},$scope.signIn=function(){$location.path("/signup")},$scope.recoverPassword=function(){$location.path("/recoverPassword")},$scope.getUser=function(){api.getUser().success(function(){$location.path("/dashboard")}).error(function(data){snackbar.error(data.error)})}}]),angular.module("upmApp").controller("notesCtrl",["$scope","$cookies","api","User","userModel","$location","subjectsTreeModel","$modal","snackbar",function($scope,$cookies,api,User,userModel,$location,subjectsTreeModel,$modal,snackbar){$scope.getNotesByLevelId=function(levelId,recursive){api.notesByLevelId(levelId,recursive||!1).success(function(data){$scope.notes=data}).error(function(data){console.log(data.error)})},$scope.openLevelModal=function(){var modalInstance=$modal.open({templateUrl:"views/_modalSubjectsList.html",controller:"ModalLevelsLists",size:"lg",resolve:{levels:function(){return subjectsTreeModel.data[0]}}});modalInstance.result.then(function(selectedItem){console.log(selectedItem),$scope.subjectsTree=selectedItem||subjectsTreeModel.data[0],$scope.getNotesByLevelId($scope.subjectsTree.id,!0)},function(){})},$scope.openNewNoteModal=function(){var modalInstance=$modal.open({templateUrl:"views/_modalNewNote.html",controller:"ModalNewNote",size:"lg",resolve:{levels:function(){return subjectsTreeModel.data[0]}}});modalInstance.result.then(function(message){snackbar.message(message,5e3),$scope.getNotesByLevelId($scope.subjectsTree.id,!0)},function(){})},$scope.init=function(){$scope.subjectsTree=subjectsTreeModel.data[0],$scope.getNotesByLevelId($scope.subjectsTree.id,!0)},$scope.subjectsTree={},$scope.notes=[],$scope.init()}]),angular.module("upmApp").controller("ModalLevelsLists",function($scope,$modalInstance,levels){$scope.root=levels,$scope.filterByLevel=function(level){$modalInstance.close(level)}}),angular.module("upmApp").controller("ModalNewNote",function($scope,$modalInstance,levels,api,snackbar){$scope.post=function(note){note=note||{},note.topic=note.topic||"",note.text=note.text||"",note.level=note.level||{},note.level_id=note.level.id||-1,console.log("note"),console.log(note),api.notePost(note).success(function(data){$modalInstance.close(data.message)}).error(function(data){snackbar.error(data.error,5e3)})},$scope.getLevelsDropdown=function(node,depthParam){function repeat(string,num){for(var i=1;num>i;i++)string+=string;return string}var depth=depthParam||0;node.depth=depth;var returningNode={};if(console.log(repeat(" · ",depth)),returningNode.name=repeat(" · ",depth)+node.name,returningNode.depth=depth,returningNode.id=node.id,returningNode.parent=node.parent,!node.children)return returningNode;for(var levelsUnested=[returningNode],i=0;i<node.children.length;i++){var returno=$scope.getLevelsDropdown(node.children[i],depth+1);Array.isArray(returno)?levelsUnested=levelsUnested.concat(returno):levelsUnested.push(returno)}return levelsUnested},$scope.levelsUnested=$scope.getLevelsDropdown(levels)}),angular.module("upmApp").controller("profileCtrl",["$scope","$cookies","api","User","userModel","snackbar",function($scope,$cookies,api,User,userModel,snackbar){$scope.editMode=!1,$scope.user=User.model,$scope.profilePic=api.getPic($scope.user.profilePic),$scope.update=function(userModel){api.updateUser(userModel).success(function(data){snackbar.message(data),$scope.editMode=!1,delete $scope.user.password}).error(function(data){snackbar.error(data.error),delete $scope.user.password,User.destroy(),User.get().then(function(){$scope.user=User.get()})})}}]),angular.module("upmApp").controller("recoverPasswordCtrl",["$scope","$cookies","api","snackbar","$location",function($scope,$cookies,api,snackbar,$location){$scope.sendForm=function(email){api.recoverPassword(email).success(function(data){snackbar.message(data.message,3e3),$location.path("/login")}).error(function(data){snackbar.error(data,3e3)})}}]),angular.module("upmApp").controller("signUpCtrl",["$scope","$cookies","api","snackbar",function($scope,$cookies,api,snackbar){$scope.signedup=!1,$scope.signUp=function(user){api.signup(user.email,user.password,user.nick).success(function(){$scope.signedup=!0}).error(function(data){snackbar.error(data.error,5e3)})}}]),angular.module("upmApp").controller("subjectsCtrl",["$scope","$cookies","api","User","userModel","$location",function($scope,$cookies,api,User,userModel,$location){$scope.navigateTo=function(id){var candidate=$scope.getNodeAndStack($scope.subjectsTree,id),node=candidate.node;"subject"===node.type?$location.path("/subject/"+id):($scope.showingSubjectsTree=node,$scope.pushStack(candidate.stack))},$scope.getNodeAndStack=function(node,id,candidateStack){var stack=candidateStack||[];if(node.id===id)return composedReturn={},composedReturn.node=node,composedReturn.stack=stack,composedReturn;if(node.children){var returno=null;return angular.forEach(node.children,function(children){returno||(candidateNode=$scope.getNodeAndStack(children,id,stack),candidateNode&&(stack.push(node),returno=candidateNode))}),returno}return null},$scope.getRootStackNode=function(){var rootStackNode={};rootStackNode.name="..",rootStackNode.id=null;var stackArray=[];return stackArray.push(rootStackNode),stackArray},$scope.pushStack=function(stack){$scope.returnStack=stack,$scope.returnStack.unshift($scope.showingSubjectsTree),$scope.returnStack.reverse()},$scope.showingSubjectsTree={},$scope.subjectsTree={},$scope.returnStack={},api.subjectsTree().success(function(data){$scope.subjectsTree=data[0],$scope.navigateTo($scope.subjectsTree.id)}).error(function(){snackbar,$location.path("/dashboard/")})}]);